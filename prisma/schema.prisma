// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  role          Role      @default(PATIENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  patient       Patient?
  caretaker     Caretaker?
}

model Patient {
  id          String    @id @default(uuid())
  name        String
  phoneNumber String
  address     String
  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  // Add these new fields
  latitude    Float?
  longitude   Float?
  lastLocationUpdate DateTime?
  locationHistory  LocationHistory[]
}

model Caretaker {
  id          String    @id @default(uuid())
  name        String
  phoneNumber String
  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// New model to store location history
model LocationHistory {
  id          String    @id @default(uuid())
  patientId   String
  patient     Patient   @relation(fields: [patientId], references: [id], onDelete: Cascade)
  latitude    Float
  longitude   Float
  timestamp   DateTime  @default(now())
}

enum Role {
  PATIENT
  CARETAKER
}
